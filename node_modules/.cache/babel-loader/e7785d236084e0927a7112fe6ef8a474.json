{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport NavBar from './components/NavBar';\n\nconst PhotoManager = () => {\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const _useState = useState(myLocalStorageItems || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        photos = _useState2[0],\n        setPhotos = _useState2[1];\n\n  const handleImageSelected = e => {\n    let photosClone = [...photos];\n    setPhotos(photosClone, e.target.files[0]);\n  };\n\n  const handleImageUpload = e => {\n    let photosClone = [...photos];\n    setPhotos(...photosClone, e.target.files[0]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"photo-manager-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"photo-manager-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(SideBar, {\n    setPhotos: setPhotos,\n    handleImageUpload: handleImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    photos: photos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n};\n\nexport default PhotoManager;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js"],"names":["React","useState","useEffect","SideBar","Dashboard","NavBar","PhotoManager","myLocalStorageItems","JSON","parse","localStorage","getItem","photos","setPhotos","handleImageSelected","e","photosClone","target","files","handleImageUpload"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAEzB,MAAIC,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAX,CAA1B;;AAFyB,oBAIGV,QAAQ,CAACM,mBAAmB,IAAI,EAAxB,CAJX;AAAA;AAAA,QAIlBK,MAJkB;AAAA,QAIVC,SAJU;;AAMzB,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjC,QAAIC,WAAW,GAAG,CAAC,GAAGJ,MAAJ,CAAlB;AACAC,IAAAA,SAAS,CAACG,WAAD,EAAcD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd,CAAT;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIJ,CAAD,IAAO;AAC/B,QAAIC,WAAW,GAAG,CAAC,GAAGJ,MAAJ,CAAlB;AACAC,IAAAA,SAAS,CAAC,GAAGG,WAAJ,EAAiBD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAjB,CAAT;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEL,SAApB;AAA+B,IAAA,iBAAiB,EAAEM,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEP,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;AASD,CAzBD;;AA2BA,eAAeN,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport NavBar from './components/NavBar';\n\nconst PhotoManager = () => {\n\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const [photos, setPhotos] = useState(myLocalStorageItems || []);\n\n  const handleImageSelected = (e) => {\n    let photosClone = [...photos];\n    setPhotos(photosClone, e.target.files[0]);\n  }\n\n  const handleImageUpload = (e) => {\n    let photosClone = [...photos];\n    setPhotos(...photosClone, e.target.files[0]);\n  }\n\n  return (\n    <div className=\"photo-manager-wrapper\">\n      <NavBar />\n      <div className=\"photo-manager-dashboard\">\n        <SideBar setPhotos={setPhotos} handleImageUpload={handleImageUpload} />\n        <Dashboard photos={photos} />\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoManager;\n"]},"metadata":{},"sourceType":"module"}