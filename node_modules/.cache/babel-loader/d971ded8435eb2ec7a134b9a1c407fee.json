{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport NavBar from './components/NavBar';\n\nconst PhotoManager = () => {\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const _useState = useState(myLocalStorageItems || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        photos = _useState2[0],\n        setPhotos = _useState2[1];\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n  const handleImageSelected = e => {\n    let photosClone = [...photos];\n    setPhotos(photosClone, e.target.files[0]);\n  };\n\n  const handleImageUpload = theEvt => {\n    var thefile = theEvt.target.files[0];\n\n    if (!thefile.type.match(\"image.*\")) {\n      return;\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = function (evt) {\n      var resultdata = evt.target.result;\n      var img = new Image();\n      img.src = event.target.result;\n      document.getElementById('dashboard-wrapper').appendChild(img);\n    };\n\n    reader.readAsDataURL(thefile); // const photosPile = [...photos, e.target.files[0]];\n    // setPhotos(photosPile);\n    // console.log('p', photos)\n  };\n\n  return React.createElement(\"div\", {\n    className: \"photo-manager-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"photo-manager-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(SideBar, {\n    setPhotos: setPhotos,\n    handleImageUpload: handleImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    photos: photos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default PhotoManager;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js"],"names":["React","useState","useEffect","SideBar","Dashboard","NavBar","PhotoManager","myLocalStorageItems","JSON","parse","localStorage","getItem","photos","setPhotos","setItem","stringify","handleImageSelected","e","photosClone","target","files","handleImageUpload","theEvt","thefile","type","match","reader","FileReader","onload","evt","resultdata","result","img","Image","src","event","document","getElementById","appendChild","readAsDataURL"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAEzB,MAAIC,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAX,CAA1B;;AAFyB,oBAIGV,QAAQ,CAACM,mBAAmB,IAAI,EAAxB,CAJX;AAAA;AAAA,QAIlBK,MAJkB;AAAA,QAIVC,SAJU;;AAMzBX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAACI,OAAb,CAAqB,sBAArB,EAA6CN,IAAI,CAACO,SAAL,CAAeH,MAAf,CAA7C;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMI,mBAAmB,GAAIC,CAAD,IAAO;AACjC,QAAIC,WAAW,GAAG,CAAC,GAAGN,MAAJ,CAAlB;AACAC,IAAAA,SAAS,CAACK,WAAD,EAAcD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd,CAAT;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIC,MAAD,IAAY;AAEpC,QAAIC,OAAO,GAAGD,MAAM,CAACH,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAd;;AACA,QAAI,CAACG,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmB,SAAnB,CAAL,EAAoC;AAChC;AACH;;AACD,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,GAAV,EAAe;AAC3B,UAAIC,UAAU,GAAGD,GAAG,CAACV,MAAJ,CAAWY,MAA5B;AAEA,UAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,MAAAA,GAAG,CAACE,GAAJ,GAAUC,KAAK,CAAChB,MAAN,CAAaY,MAAvB;AACAK,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,WAA7C,CAAyDN,GAAzD;AACH,KAND;;AAQAN,IAAAA,MAAM,CAACa,aAAP,CAAqBhB,OAArB,EAfoC,CAgBpC;AACA;AACA;AACD,GAnBD;;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEV,SAApB;AAA+B,IAAA,iBAAiB,EAAEQ,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAET,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;AASD,CA7CD;;AA+CA,eAAeN,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport NavBar from './components/NavBar';\n\nconst PhotoManager = () => {\n\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const [photos, setPhotos] = useState(myLocalStorageItems || []);\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n  const handleImageSelected = (e) => {\n    let photosClone = [...photos];\n    setPhotos(photosClone, e.target.files[0]);\n  }\n\n  const handleImageUpload = (theEvt) => {\n\n    var thefile = theEvt.target.files[0];\n    if (!thefile.type.match(\"image.*\")) {\n        return;\n    }\n    var reader = new FileReader();\n    reader.onload = function (evt) {\n        var resultdata = evt.target.result;\n\n        var img = new Image();\n        img.src = event.target.result;\n        document.getElementById('dashboard-wrapper').appendChild(img);\n    }\n\n    reader.readAsDataURL(thefile);\n    // const photosPile = [...photos, e.target.files[0]];\n    // setPhotos(photosPile);\n    // console.log('p', photos)\n  }\n\n  return (\n    <div className=\"photo-manager-wrapper\">\n      <NavBar />\n      <div className=\"photo-manager-dashboard\">\n        <SideBar setPhotos={setPhotos} handleImageUpload={handleImageUpload} />\n        <Dashboard photos={photos} />\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoManager;\n"]},"metadata":{},"sourceType":"module"}