{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let image = photos.filter(photo => photo.id === photoId);\n  const getImage = React.createElement(\"img\", {\n    src: image[0].url,\n    alt: photoId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n\n  const _useState = useState({\n    imageUrl: image[0].url,\n    crop: {\n      x: 0,\n      y: 0\n    },\n    zoom: 1,\n    aspect: 1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const onCropChange = crop => {\n    //setCrop({crop});\n    console.log(crop);\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const onZoomChange = zoom => {\n    console.log(zoom);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"div\", {\n    className: \"image-fullsize-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: image[0].url,\n    crop: crop,\n    aspect: crop.aspect,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: onZoomChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","Cropper","PopUp","photoId","photos","setPhotos","togglePopUp","image","filter","photo","id","getImage","url","imageUrl","crop","x","y","zoom","aspect","setCrop","onCropChange","console","log","onCropComplete","croppedArea","croppedAreaPixels","onZoomChange","handleRemove","newPhotos"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let image = photos.filter( photo => photo.id === photoId );\n  const getImage = <img src={image[0].url} alt={photoId} />;\n  const [crop, setCrop] = useState({\n    imageUrl: image[0].url,\n    crop: {\n      x: 0,\n      y: 0\n    },\n    zoom: 1,\n    aspect: 1\n  });\n\n  const onCropChange = crop => {\n    //setCrop({crop});\n    console.log(crop);\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const onZoomChange = zoom => {\n    console.log(zoom);\n  }\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={image[0].url}\n          crop={crop}\n          aspect={crop.aspect}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={onZoomChange}\n        />\n      </div>\n        <div className=\"image-actions\">\n          <button className=\"btn primary-btn crop-btn\">Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}