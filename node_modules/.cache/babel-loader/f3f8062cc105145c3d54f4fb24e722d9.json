{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\nimport React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImage from '../helpers/cropImage';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let image = photos.filter(photo => photo.id === photoId); //const getImage = <img src={image[0].url} alt={photoId} />;\n\n  const _useState = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zoom = _useState4[0],\n        setZoom = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        croppedAreaPixels = _useState6[0],\n        setCroppedAreaPixels = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        croppedImage = _useState8[0],\n        setCroppedImage = _useState8[1];\n\n  const onCropChange = crop => {\n    setCrop({\n      crop\n    });\n    console.log(crop);\n  };\n\n  const updateCroppedImg = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImage(image[0].url, croppedAreaPixels);\n      console.log('donee', {\n        croppedImage\n      });\n      setCroppedImage(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels]);\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log('test');\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"div\", {\n    className: \"image-fullsize-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: image[0].url,\n    crop: crop,\n    zoom: zoom,\n    aspect: 1 / 1,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    onClick: updateCroppedImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","useCallback","Cropper","getCroppedImage","PopUp","photoId","photos","setPhotos","togglePopUp","image","filter","photo","id","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","onCropChange","console","log","updateCroppedImg","url","e","error","onCropComplete","croppedArea","handleRemove","newPhotos"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImage from '../helpers/cropImage';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let image = photos.filter( photo => photo.id === photoId );\n  //const getImage = <img src={image[0].url} alt={photoId} />;\n  const [crop, setCrop] = useState({ x: 0, y: 0});\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n  const [croppedImage, setCroppedImage] = useState(null)\n\n  const onCropChange = crop => {\n    setCrop({crop});\n    console.log(crop);\n  };\n\n  const updateCroppedImg = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImage(\n        image[0].url,\n        croppedAreaPixels\n      )\n      console.log('donee', { croppedImage })\n      setCroppedImage(croppedImage)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [croppedAreaPixels]);\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log('test');\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={image[0].url}\n          crop={crop}\n          zoom={zoom}\n          aspect={1/1}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n        <div className=\"image-actions\">\n          <button className=\"btn primary-btn crop-btn\" onClick={updateCroppedImg}>Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}