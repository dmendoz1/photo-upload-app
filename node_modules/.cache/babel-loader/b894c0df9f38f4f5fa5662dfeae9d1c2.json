{"ast":null,"code":"import _defineProperty from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImage from '../helpers/cropImage';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let image = photos.filter(photo => photo.id === photoId);\n\n  const _useState = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zoom = _useState4[0],\n        setZoom = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        croppedAreaPixels = _useState6[0],\n        setCroppedAreaPixels = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        croppedImage = _useState8[0],\n        setCroppedImage = _useState8[1];\n\n  const onCropChange = crop => {\n    setCrop({\n      crop\n    });\n    console.log(crop);\n  };\n\n  const updateCroppedImg = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImage(image[0].url, croppedAreaPixels);\n      setCroppedImage(croppedImage);\n      image = image[0];\n\n      let finalCroppedImage = _objectSpread({}, image, {\n        url: croppedImage,\n        class: ''\n      });\n\n      let croppedPhotosArr = photos.map(img => {\n        if (img.id === photoId) {\n          img.url = croppedImage;\n          img.class = '';\n        }\n\n        return img;\n      });\n      setPhotos(croppedPhotosArr);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels]);\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"div\", {\n    className: \"image-fullsize-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: image[0].url,\n    crop: crop,\n    zoom: zoom,\n    aspect: 1 / 1,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Zooming capabilities are present if using on a trackpad\"), React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    onClick: updateCroppedImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","useCallback","Cropper","getCroppedImage","PopUp","photoId","photos","setPhotos","togglePopUp","image","filter","photo","id","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","onCropChange","console","log","updateCroppedImg","url","finalCroppedImage","class","croppedPhotosArr","map","img","e","error","onCropComplete","croppedArea","handleRemove","newPhotos"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImage from '../helpers/cropImage';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let image = photos.filter( photo => photo.id === photoId );\n  const [crop, setCrop] = useState({ x: 0, y: 0});\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n  const [croppedImage, setCroppedImage] = useState(null)\n\n  const onCropChange = crop => {\n    setCrop({crop});\n    console.log(crop);\n  };\n\n  const updateCroppedImg = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImage(\n        image[0].url,\n        croppedAreaPixels\n      )\n\n      setCroppedImage(croppedImage);\n      image = image[0];\n      let finalCroppedImage = {...image, url:croppedImage, class: ''};\n      let croppedPhotosArr = photos.map(img => {\n        if (img.id === photoId) {\n          img.url = croppedImage;\n          img.class = '';\n        }\n        return img;\n      });\n      setPhotos(croppedPhotosArr);\n\n\n    } catch (e) {\n      console.error(e)\n    }\n  }, [croppedAreaPixels]);\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels)\n  };\n\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={image[0].url}\n          crop={crop}\n          zoom={zoom}\n          aspect={1/1}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n        <div className=\"image-actions\">\n          <h3>Zooming capabilities are present if using on a trackpad</h3>\n          <button className=\"btn primary-btn crop-btn\" onClick={updateCroppedImg}>Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}