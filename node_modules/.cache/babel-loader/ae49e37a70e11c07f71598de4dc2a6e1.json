{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CropArea = exports.Img = exports.Container = void 0;\n\nvar _styled = _interopRequireDefault(require(\"@emotion/styled\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Container = (0, _styled[\"default\"])('div')({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  overflow: 'hidden',\n  userSelect: 'none',\n  touchAction: 'none',\n  cursor: 'move'\n}, function (_ref) {\n  var containerStyle = _ref.containerStyle;\n  return _objectSpread({}, containerStyle);\n});\nexports.Container = Container;\nvar Img = (0, _styled[\"default\"])('img')({\n  maxWidth: '100%',\n  maxHeight: '100%',\n  margin: 'auto',\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  willChange: 'transform' // this improves performances and prevent painting issues on iOS Chrome\n\n}, function (_ref2) {\n  var imageStyle = _ref2.imageStyle;\n  return _objectSpread({}, imageStyle);\n});\nexports.Img = Img;\nvar lineBorder = '1px solid rgba(255, 255, 255, 0.5)';\nvar cropperLines = {\n  content: '\" \"',\n  boxSizing: 'border-box',\n  position: 'absolute',\n  border: lineBorder\n};\nvar cropperArea = {\n  position: 'absolute',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n  border: lineBorder,\n  boxSizing: 'border-box',\n  boxShadow: '0 0 0 9999em',\n  color: 'rgba(0,0,0,0.5)',\n  overflow: 'hidden'\n};\nvar gridLines = {\n  '&::before': _objectSpread({}, cropperLines, {\n    top: 0,\n    bottom: 0,\n    left: '33.33%',\n    right: '33.33%',\n    borderTop: 0,\n    borderBottom: 0\n  }),\n  '&::after': _objectSpread({}, cropperLines, {\n    top: '33.33%',\n    bottom: '33.33%',\n    left: 0,\n    right: 0,\n    borderLeft: 0,\n    borderRight: 0\n  })\n};\nvar roundShape = {\n  borderRadius: '50%'\n};\nvar CropArea = (0, _styled[\"default\"])('div')({}, function (_ref3) {\n  var cropShape = _ref3.cropShape,\n      showGrid = _ref3.showGrid,\n      cropAreaStyle = _ref3.cropAreaStyle;\n  return _objectSpread({}, function () {\n    switch (cropShape) {\n      case 'round':\n        return _objectSpread({}, cropperArea, roundShape);\n\n      case 'rect':\n      default:\n        return cropperArea;\n    }\n  }(), showGrid ? gridLines : {}, cropAreaStyle);\n});\nexports.CropArea = CropArea;","map":null,"metadata":{},"sourceType":"script"}