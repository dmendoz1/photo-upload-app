{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport NavBar from './components/NavBar';\n\nconst PhotoManager = () => {\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const _useState = useState(myLocalStorageItems || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        photos = _useState2[0],\n        setPhotos = _useState2[1];\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n  const handlePhotoOnClick = () => {\n    console.log('blah');\n  };\n\n  const handleImageUpload = theEvt => {\n    var theImage = theEvt.target.files[0];\n    /* if not an image */\n\n    if (!theImage.type.match(\"image.*\")) {\n      return;\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = function (evt) {\n      let img = new Image();\n      let imgSrc = evt.target.result;\n      img.src = evt.target.result;\n\n      img.onload = () => {\n        let imgWidth = img.naturalWidth;\n        let imgHeight = img.naturalHeight;\n        let imageClass = '';\n\n        if (imgWidth > 800 && imgHeight > 700) {\n          imageClass = 'big';\n        } else if (imgWidth > imgHeight && imgWidth / imgHeight > 1.5) {\n          imageClass = 'horizontal';\n        } else if (imgHeight > imgWidth && imgHeight / imgWidth > 1.5) {\n          imageClass = 'vertical';\n        }\n\n        let finalImgObj = {\n          url: imgSrc,\n          class: imageClass\n        };\n        const photosPile = [...photos, finalImgObj];\n        setPhotos(photosPile);\n      };\n    };\n\n    reader.readAsDataURL(theImage);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"photo-manager-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"photo-manager-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(SideBar, {\n    setPhotos: setPhotos,\n    handleImageUpload: handleImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    handlePhotoOnClick: handlePhotoOnClick,\n    photos: photos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n};\n\nexport default PhotoManager;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js"],"names":["React","useState","useEffect","SideBar","Dashboard","NavBar","PhotoManager","myLocalStorageItems","JSON","parse","localStorage","getItem","photos","setPhotos","setItem","stringify","handlePhotoOnClick","console","log","handleImageUpload","theEvt","theImage","target","files","type","match","reader","FileReader","onload","evt","img","Image","imgSrc","result","src","imgWidth","naturalWidth","imgHeight","naturalHeight","imageClass","finalImgObj","url","class","photosPile","readAsDataURL"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport NavBar from './components/NavBar';\n\nconst PhotoManager = () => {\n\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const [photos, setPhotos] = useState(myLocalStorageItems || []);\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n\n  const handlePhotoOnClick = () => {\n    console.log('blah');\n  }\n\n  const handleImageUpload = (theEvt) => {\n\n    var theImage = theEvt.target.files[0];\n\n    /* if not an image */\n    if (!theImage.type.match(\"image.*\")) {\n        return;\n    }\n    var reader = new FileReader();\n    reader.onload = function (evt) {\n        let img = new Image();\n        let imgSrc = evt.target.result\n        img.src = evt.target.result;\n\n        img.onload = () => {\n          let imgWidth = img.naturalWidth;\n          let imgHeight = img.naturalHeight;\n          let imageClass = '';\n\n          if(imgWidth > 800 && imgHeight > 700) {\n            imageClass = 'big'\n          } else if(imgWidth > imgHeight && (imgWidth / imgHeight) > 1.5) {\n            imageClass = 'horizontal'\n          } else if(imgHeight > imgWidth && (imgHeight / imgWidth) > 1.5) {\n            imageClass = 'vertical';\n          }\n          let finalImgObj = {\n            url : imgSrc,\n            class : imageClass\n          };\n          const photosPile = [...photos, finalImgObj];\n          setPhotos(photosPile);\n        }\n\n    }\n\n    reader.readAsDataURL(theImage);\n  }\n\n  return (\n    <div className=\"photo-manager-wrapper\">\n      <NavBar />\n      <div className=\"photo-manager-dashboard\">\n        <SideBar setPhotos={setPhotos} handleImageUpload={handleImageUpload} />\n        <Dashboard handlePhotoOnClick={handlePhotoOnClick} photos={photos} />\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoManager;\n"]},"metadata":{},"sourceType":"module"}