{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\nimport React, { useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let image = photos.filter(photo => photo.id === photoId);\n  const getImage = React.createElement(\"img\", {\n    src: image[0].url,\n    alt: photoId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n\n  const _useState = useState({\n    crop: {\n      aspect: 1 / 1\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  const handleOnCropChange = crop => {\n    console.log(crop);\n    setCrop({\n      crop\n    });\n    console.log(crop);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"x\"), React.createElement(ReactCrop, {\n    src: image[0].url,\n    alt: photoId,\n    crop: crop,\n    onChange: handleOnCropChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","ReactCrop","PopUp","photoId","photos","setPhotos","togglePopUp","image","filter","photo","id","getImage","url","crop","aspect","setCrop","handleRemove","newPhotos","handleOnCropChange","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAA+C;AAC3D,MAAIC,KAAK,GAAGH,MAAM,CAACI,MAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,OAArC,CAAZ;AACA,QAAMQ,QAAQ,GAAG;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAAC,CAAD,CAAL,CAASK,GAAnB;AAAwB,IAAA,GAAG,EAAET,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;;AAF2D,oBAInCH,QAAQ,CAAC;AAC/Ba,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,IAAE;AADN;AADyB,GAAD,CAJ2B;AAAA;AAAA,QAIpDD,IAJoD;AAAA,QAI9CE,OAJ8C;;AAU3D,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,SAAS,GAAGb,MAAM,CAACI,MAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,OAArC,CAAhB;AACAE,IAAAA,SAAS,CAACY,SAAD,CAAT;AACAX,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAMA,QAAMY,kBAAkB,GAAIL,IAAD,IAAU;AACnCM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAE,IAAAA,OAAO,CAAC;AAACF,MAAAA;AAAD,KAAD,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,GAJD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAE,MAAKP,WAAW,CAAC,EAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,EAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAGE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASK,GADhB;AAEE,IAAA,GAAG,EAAET,OAFP;AAGE,IAAA,IAAI,EAAEU,IAHR;AAIE,IAAA,QAAQ,EAAEK,kBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEF,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CATF,CAHF,CADF;AAoBD,CA3CD;;AA6CA,eAAed,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let image = photos.filter( photo => photo.id === photoId );\n  const getImage = <img src={image[0].url} alt={photoId} />;\n\n  const [crop, setCrop] = useState({\n    crop: {\n      aspect: 1/1\n    }\n  })\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n  const handleOnCropChange = (crop) => {\n    console.log(crop);\n    setCrop({crop});\n    console.log(crop)\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n        {/* <div className=\"image-fullsize-container\">{getImage}</div> */}\n        <ReactCrop\n          src={image[0].url}\n          alt={photoId}\n          crop={crop}\n          onChange={handleOnCropChange}\n        />\n        <div className=\"image-actions\">\n          <button className=\"btn primary-btn crop-btn\">Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}