{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport PopUp from './components/PopUp';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nconst PhotoManager = () => {\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const _useState = useState(myLocalStorageItems || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        photos = _useState2[0],\n        setPhotos = _useState2[1];\n\n  const _useState3 = useState({\n    show: false,\n    photoId: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        popUp = _useState4[0],\n        setPopUp = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSortModeOn = _useState6[0],\n        setSortMode = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imagesOrder = _useState8[0],\n        setImagesOrder = _useState8[1];\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n  const handlePhotoOnClick = id => {\n    setPopUp({\n      show: !popUp.show,\n      photoId: id\n    });\n  };\n\n  const handleImageUpload = e => {\n    var theImage = e.target.files[0];\n    /* if not an image, dont do anything */\n\n    if (!theImage.type.match(\"image.*\")) {\n      return;\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = function (evt) {\n      let img = new Image();\n      img.src = evt.target.result;\n      let imgSrc = img.src;\n\n      img.onload = () => {\n        let imgWidth = img.naturalWidth;\n        let imgHeight = img.naturalHeight;\n        let imageClass = '';\n\n        if (imgWidth > 800 && imgHeight > 700) {\n          imageClass = 'big';\n        } else if (imgWidth > imgHeight && imgWidth / imgHeight > 1.5) {\n          imageClass = 'horizontal';\n        } else if (imgHeight > imgWidth && imgHeight / imgWidth > 1.5) {\n          imageClass = 'vertical';\n        }\n\n        let finalImgObj = {\n          url: imgSrc,\n          class: imageClass,\n          id: photos.length\n        };\n        const photosPile = [...photos, finalImgObj];\n        setPhotos(photosPile);\n      };\n    };\n\n    reader.readAsDataURL(theImage);\n  };\n\n  const handleMosaicView = () => {\n    let dashboard = document.querySelector('.dashboard-wrapper');\n    let mosaicBtn = document.querySelector('#mosaic-btn');\n    let mosaicBtnOptOne = 'MOSAIC VIEW';\n    let mosaicBtnOptTwo = 'GRID VIEW';\n    let btnText = dashboard.classList.contains('mosaic-view') ? mosaicBtnOptOne : mosaicBtnOptTwo;\n    dashboard.classList.toggle('mosaic-view');\n    mosaicBtn.textContent = btnText;\n  };\n\n  const handleSortPhotosClick = () => {\n    let dashboard = document.querySelector('.dashboard-wrapper');\n    let sortBtn = document.querySelector('#sort-btn');\n    let btnOptOne = 'SORT IMAGES';\n    let btnOptTwo = 'DONE SORTING';\n    let btnText = dashboard.classList.contains('sort-activated') ? btnOptOne : btnOptTwo;\n    dashboard.classList.toggle('sort-activated');\n    sortBtn.textContent = btnText;\n    setSortMode(!isSortModeOn);\n  };\n\n  const onDragEnd = result => {\n    const destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n    if (!destination) return;\n    if (destination.droppedId === source.droppableId && destination.index === source.index) return;\n    const photoIds = photos.map(photo => photo.id);\n    const reorderedPhotos = [...photos];\n    let movingEl = reorderedPhotos[source.index];\n    reorderedPhotos.splice(source.index, 1);\n    reorderedPhotos.splice(destination.index, 0, movingEl);\n    setPhotos(reorderedPhotos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"photo-manager-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"photo-manager-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(SideBar, {\n    setPhotos: setPhotos,\n    handleImageUpload: handleImageUpload,\n    handleMosaicView: handleMosaicView,\n    handleSortPhotosClick: handleSortPhotosClick,\n    isSortModeOn: isSortModeOn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    handlePhotoOnClick: handlePhotoOnClick,\n    photos: photos,\n    isSortModeOn: isSortModeOn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), popUp.show ? React.createElement(PopUp, {\n    photos: photos,\n    photoId: popUp.photoId,\n    togglePopUp: handlePhotoOnClick,\n    setPhotos: setPhotos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }) : null));\n};\n\nexport default PhotoManager;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/PhotoManager.js"],"names":["React","useState","useEffect","SideBar","Dashboard","PopUp","DragDropContext","PhotoManager","myLocalStorageItems","JSON","parse","localStorage","getItem","photos","setPhotos","show","photoId","popUp","setPopUp","isSortModeOn","setSortMode","imagesOrder","setImagesOrder","setItem","stringify","handlePhotoOnClick","id","handleImageUpload","e","theImage","target","files","type","match","reader","FileReader","onload","evt","img","Image","src","result","imgSrc","imgWidth","naturalWidth","imgHeight","naturalHeight","imageClass","finalImgObj","url","class","length","photosPile","readAsDataURL","handleMosaicView","dashboard","document","querySelector","mosaicBtn","mosaicBtnOptOne","mosaicBtnOptTwo","btnText","classList","contains","toggle","textContent","handleSortPhotosClick","sortBtn","btnOptOne","btnOptTwo","onDragEnd","destination","source","draggableId","droppedId","droppableId","index","photoIds","map","photo","reorderedPhotos","movingEl","splice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport PopUp from './components/PopUp';\n\nimport {DragDropContext} from 'react-beautiful-dnd';\n\nconst PhotoManager = () => {\n\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const [photos, setPhotos] = useState(myLocalStorageItems || []);\n  const [popUp, setPopUp] = useState({\n    show: false,\n    photoId: ''\n  });\n\n  const [isSortModeOn, setSortMode] = useState(false);\n\n  const [imagesOrder, setImagesOrder] = useState([]);\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n\n  const handlePhotoOnClick = (id) => {\n    setPopUp( {\n      show: !popUp.show,\n      photoId: id\n    });\n  }\n\n\n  const handleImageUpload = (e) => {\n\n    var theImage = e.target.files[0];\n\n    /* if not an image, dont do anything */\n    if (!theImage.type.match(\"image.*\")) {\n        return;\n    }\n    var reader = new FileReader();\n    reader.onload = function (evt) {\n        let img = new Image();\n        img.src = evt.target.result;\n        let imgSrc = img.src;\n        img.onload = () => {\n          let imgWidth = img.naturalWidth;\n          let imgHeight = img.naturalHeight;\n          let imageClass = '';\n\n          if(imgWidth > 800 && imgHeight > 700) {\n            imageClass = 'big';\n          } else if(imgWidth > imgHeight && (imgWidth / imgHeight) > 1.5) {\n            imageClass = 'horizontal'\n          } else if(imgHeight > imgWidth && (imgHeight / imgWidth) > 1.5) {\n            imageClass = 'vertical';\n          }\n          let finalImgObj = {\n            url : imgSrc,\n            class : imageClass,\n            id : photos.length\n          };\n          const photosPile = [...photos, finalImgObj];\n          setPhotos(photosPile);\n        }\n\n    }\n\n    reader.readAsDataURL(theImage);\n  }\n\n  const handleMosaicView = () => {\n    let dashboard = document.querySelector('.dashboard-wrapper');\n    let mosaicBtn = document.querySelector('#mosaic-btn');\n    let mosaicBtnOptOne = 'MOSAIC VIEW';\n    let mosaicBtnOptTwo = 'GRID VIEW';\n    let btnText = dashboard.classList.contains('mosaic-view') ? mosaicBtnOptOne : mosaicBtnOptTwo;\n    dashboard.classList.toggle('mosaic-view');\n    mosaicBtn.textContent = btnText;\n  }\n\n  const handleSortPhotosClick = () => {\n    let dashboard = document.querySelector('.dashboard-wrapper');\n    let sortBtn = document.querySelector('#sort-btn');\n    let btnOptOne = 'SORT IMAGES';\n    let btnOptTwo = 'DONE SORTING';\n    let btnText = dashboard.classList.contains('sort-activated') ? btnOptOne : btnOptTwo;\n    dashboard.classList.toggle('sort-activated');\n    sortBtn.textContent = btnText;\n    setSortMode(!isSortModeOn);\n  }\n\n  const onDragEnd = result => {\n    const {destination, source, draggableId} = result;\n    if(!destination) return;\n    if(\n      destination.droppedId === source.droppableId &&\n      destination.index === source.index\n    ) return;\n    const photoIds = photos.map(photo => photo.id);\n    const reorderedPhotos = [...photos];\n    let movingEl = reorderedPhotos[source.index];\n    reorderedPhotos.splice(source.index, 1);\n    reorderedPhotos.splice(destination.index, 0,movingEl);\n    setPhotos(reorderedPhotos);\n  }\n\n  return (\n    <div className=\"photo-manager-wrapper\">\n      <div className=\"photo-manager-dashboard\">\n        <SideBar\n          setPhotos={setPhotos}\n          handleImageUpload={handleImageUpload}\n          handleMosaicView={handleMosaicView}\n          handleSortPhotosClick={handleSortPhotosClick}\n          isSortModeOn={isSortModeOn}\n        />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Dashboard\n            handlePhotoOnClick={handlePhotoOnClick}\n            photos={photos}\n            isSortModeOn={isSortModeOn}\n        />\n        </DragDropContext>\n        { popUp.show ? <PopUp\n            photos={photos}\n            photoId={popUp.photoId}\n            togglePopUp={handlePhotoOnClick}\n            setPhotos={setPhotos}\n          /> :\n          null }\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoManager;\n"]},"metadata":{},"sourceType":"module"}