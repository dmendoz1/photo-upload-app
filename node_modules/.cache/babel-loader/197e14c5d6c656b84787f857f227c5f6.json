{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\nimport Slider from '@material-ui/lab/Slider';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let imageObj = photos.filter(photo => photo.id === photoId); //const getImage = <img src={image[0].url} alt={photoId} />;\n\n  const _useState = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zoom = _useState4[0],\n        setZoom = _useState4[1];\n\n  const onCropChange = crop => {\n    //setCrop({crop});\n    console.log(crop);\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"div\", {\n    className: \"image-fullsize-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: imageObj[0].url,\n    crop: crop,\n    zoom: zoom,\n    aspect: 1 / 1,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    value: zoom,\n    min: 1,\n    max: 3,\n    step: 0.1,\n    \"aria-labelledby\": \"Zoom\",\n    onChange: (e, zoom) => setZoom(zoom),\n    classes: {\n      container: 'slider'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","Cropper","Slider","PopUp","photoId","photos","setPhotos","togglePopUp","imageObj","filter","photo","id","x","y","crop","setCrop","zoom","setZoom","onCropChange","console","log","onCropComplete","croppedArea","croppedAreaPixels","handleRemove","newPhotos","url","e","container"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Cropper from 'react-easy-crop';\nimport Slider from '@material-ui/lab/Slider';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let imageObj = photos.filter( photo => photo.id === photoId );\n  //const getImage = <img src={image[0].url} alt={photoId} />;\n  const [crop, setCrop] = useState({ x: 0, y: 0});\n  const [zoom, setZoom] = useState(1)\n\n  const onCropChange = crop => {\n    //setCrop({crop});\n    console.log(crop);\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={imageObj[0].url}\n          crop={crop}\n          zoom={zoom}\n          aspect={1/1}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n        <div className=\"controls\">\n        <Slider\n          value={zoom}\n          min={1}\n          max={3}\n          step={0.1}\n          aria-labelledby=\"Zoom\"\n          onChange={(e, zoom) => setZoom(zoom)}\n          classes={{ container: 'slider' }}\n        />\n      </div>\n      </div>\n        <div className=\"image-actions\">\n          <button className=\"btn primary-btn crop-btn\">Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}