{"ast":null,"code":"import _defineProperty from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let imageObj = photos.filter(photo => photo.id === photoId); //const getImage = <img src={image[0].url} alt={photoId} />;\n\n  const _useState = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zoom = _useState4[0],\n        setZoom = _useState4[1];\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log('test');\n\n    let newCoordinates = _objectSpread({}, crop);\n\n    console.log('cropped area', croppedArea);\n    console.log('croppedArea pixels', croppedAreaPixels);\n  };\n\n  const onCropChange = crop => {\n    console.log('oncropChange');\n    console.log(crop);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"div\", {\n    className: \"image-fullsize-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: imageObj[0].url,\n    crop: crop,\n    zoom: zoom,\n    aspect: 1 / 1,\n    onCropChange: onCropChange,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","Cropper","PopUp","photoId","photos","setPhotos","togglePopUp","imageObj","filter","photo","id","x","y","crop","setCrop","zoom","setZoom","onCropComplete","croppedArea","croppedAreaPixels","console","log","newCoordinates","onCropChange","handleRemove","newPhotos","url"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAA+C;AAC3D,MAAIC,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,OAArC,CAAf,CAD2D,CAE3D;;AAF2D,oBAGnCH,QAAQ,CAAC;AAAEW,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAH2B;AAAA;AAAA,QAGpDC,IAHoD;AAAA,QAG9CC,OAH8C;;AAAA,qBAInCd,QAAQ,CAAC,CAAD,CAJ2B;AAAA;AAAA,QAIpDe,IAJoD;AAAA,QAI9CC,OAJ8C;;AAM3D,QAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,iBAAd,KAAoC;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAIC,cAAc,qBAAOT,IAAP,CAAlB;;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,WAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,iBAAlC;AACD,GAND;;AASA,QAAMI,YAAY,GAAGV,IAAI,IAAI;AAC3BO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,GAHD;;AAKA,QAAMW,YAAY,GAAG,MAAM;AACzB,QAAIC,SAAS,GAAGrB,MAAM,CAACI,MAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,OAArC,CAAhB;AACAE,IAAAA,SAAS,CAACoB,SAAD,CAAT;AACAnB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,EAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,EAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACA,IAAA,KAAK,EAAEC,QAAQ,CAAC,CAAD,CAAR,CAAYmB,GADnB;AAEA,IAAA,IAAI,EAAEb,IAFN;AAGA,IAAA,IAAI,EAAEE,IAHN;AAIA,IAAA,MAAM,EAAE,IAAE,CAJV;AAKA,IAAA,YAAY,EAAEQ,YALd;AAMA,IAAA,cAAc,EAAEN,cANhB;AAOA,IAAA,YAAY,EAAED,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAcE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEQ,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAdF,CAHF,CADF;AAyBD,CApDD;;AAsDA,eAAetB,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let imageObj = photos.filter( photo => photo.id === photoId );\n  //const getImage = <img src={image[0].url} alt={photoId} />;\n  const [crop, setCrop] = useState({ x: 0, y: 0});\n  const [zoom, setZoom] = useState(1)\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log('test');\n    let newCoordinates = {...crop};\n\n    console.log('cropped area', croppedArea);\n    console.log('croppedArea pixels', croppedAreaPixels);\n  };\n\n\n  const onCropChange = crop => {\n    console.log('oncropChange');\n    console.log(crop);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={imageObj[0].url}\n          crop={crop}\n          zoom={zoom}\n          aspect={1/1}\n          onCropChange={onCropChange}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n        <div className=\"image-actions\">\n          <button className=\"btn primary-btn crop-btn\">Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}