{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/photo-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js\";\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst PopUp = ({\n  photoId,\n  photos,\n  setPhotos,\n  togglePopUp\n}) => {\n  let imageObj = photos.filter(photo => photo.id === photoId); //const getImage = <img src={image[0].url} alt={photoId} />;\n\n  const _useState = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        crop = _useState2[0],\n        setCrop = _useState2[1];\n\n  const onCropChange = crop => {\n    //setCrop({crop});\n    console.log(crop);\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter(photo => photo.id !== photoId);\n    setPhotos(newPhotos);\n    togglePopUp('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"full-image-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    onClick: () => togglePopUp(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"div\", {\n    className: \"image-fullsize-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: imageObj[0].url,\n    crop: crop,\n    showGrid: false,\n    aspect: 1 / 1,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"image-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn primary-btn crop-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    className: \"danger-btn remove btn\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/photo-management-app/src/components/PopUp.js"],"names":["React","useState","Cropper","PopUp","photoId","photos","setPhotos","togglePopUp","imageObj","filter","photo","id","x","y","crop","setCrop","onCropChange","console","log","onCropComplete","croppedArea","croppedAreaPixels","handleRemove","newPhotos","url"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAA+C;AAC3D,MAAIC,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,OAArC,CAAf,CAD2D,CAE3D;;AAF2D,oBAGnCH,QAAQ,CAAC;AAAEW,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAH2B;AAAA;AAAA,QAGpDC,IAHoD;AAAA,QAG9CC,OAH8C;;AAK3D,QAAMC,YAAY,GAAGF,IAAI,IAAI;AAC3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAHD;;AAKA,QAAMK,cAAc,GAAG,CAACC,WAAD,EAAcC,iBAAd,KAAoC;AACzDJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAAyBC,iBAAzB;AACD,GAFD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,SAAS,GAAGlB,MAAM,CAACI,MAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaP,OAArC,CAAhB;AACAE,IAAAA,SAAS,CAACiB,SAAD,CAAT;AACAhB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,EAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,EAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACA,IAAA,KAAK,EAAEC,QAAQ,CAAC,CAAD,CAAR,CAAYgB,GADnB;AAEA,IAAA,IAAI,EAAEV,IAFN;AAGA,IAAA,QAAQ,EAAE,KAHV;AAIA,IAAA,MAAM,EAAE,IAAE,CAJV;AAKA,IAAA,YAAY,EAAEC,OALd;AAMA,IAAA,cAAc,EAAEI,cANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAaE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEG,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAbF,CAHF,CADF;AAwBD,CA9CD;;AAgDA,eAAenB,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport Cropper from 'react-easy-crop';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let imageObj = photos.filter( photo => photo.id === photoId );\n  //const getImage = <img src={image[0].url} alt={photoId} />;\n  const [crop, setCrop] = useState({ x: 0, y: 0});\n\n  const onCropChange = crop => {\n    //setCrop({crop});\n    console.log(crop);\n  };\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels);\n  };\n\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={imageObj[0].url}\n          crop={crop}\n          showGrid={false}\n          aspect={1/1}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n        />\n      </div>\n        <div className=\"image-actions\">\n          <button className=\"btn primary-btn crop-btn\">Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n"]},"metadata":{},"sourceType":"module"}