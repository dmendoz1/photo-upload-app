{"version":3,"sources":["components/Sidebar.js","components/ImageComponent.js","components/Dashboard.js","helpers/cropImage.js","components/PopUp.js","PhotoManager.js","index.js"],"names":["Sidebar","props","handleImageUpload","handleMosaicView","handleSortPhotosClick","isSortModeOn","photos","className","disabled","type","onChange","length","id","onClick","ImageComponent","photoId","image","handlePhotoOnClick","draggableId","index","isDragDisabled","provided","draggableProps","dragHandleProps","ref","innerRef","class","src","url","alt","Dashboard","noImagesDiv","droppableId","droppableProps","map","idx","key","placeholder","createImage","Promise","resolve","reject","Image","addEventListener","error","setAttribute","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","canvas","document","createElement","ctx","getContext","safeArea","max","width","height","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","URL","createObjectURL","PopUp","setPhotos","togglePopUp","filter","photo","useState","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","updateCroppedImg","useCallback","getCroppedImage","croppedImage","croppedPhotosArr","img","console","aspect","onCropChange","onCropComplete","croppedArea","onZoomChange","newPhotos","PhotoManager","myLocalStorageItems","JSON","parse","localStorage","getItem","show","popUp","setPopUp","setSortMode","useEffect","setItem","stringify","e","theImage","target","files","match","reader","FileReader","onload","evt","log","result","imgSrc","imgWidth","naturalWidth","imgHeight","naturalHeight","imageClass","finalImgObj","photosPile","readAsDataURL","dashboard","querySelector","mosaicBtn","btnText","classList","contains","toggle","textContent","sortBtn","onDragEnd","destination","source","droppedId","reorderedPhotos","movingEl","splice","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.32029c38.chunk.js","sourcesContent":["import React from 'react';\n\nconst Sidebar = (props) => {\n  const {handleImageUpload, handleMosaicView, handleSortPhotosClick, isSortModeOn, photos} = props;\n  return (\n    <div className=\"sidebar-wrapper\">\n      <label className=\"btn primary-btn input-file-button\" disabled={isSortModeOn}>\n        <input type=\"file\" onChange={handleImageUpload} disabled={isSortModeOn}/>\n        UPLOAD PHOTO\n      </label>\n      {(photos.length > 1) && <button id=\"mosaic-btn\" className=\"btn secondary-btn mosaic-view-btn\" disabled={isSortModeOn} onClick={handleMosaicView}>\n        MOSAIC VIEW\n      </button>}\n      {(photos.length > 1) && <button id=\"sort-btn\" className=\"btn\" onClick={handleSortPhotosClick}>\n        SORT IMAGES\n      </button>}\n    </div>\n  )\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nconst ImageComponent = (props) => {\n\n  const {photoId, image, handlePhotoOnClick, isSortModeOn} = props;\n  return (\n    <Draggable\n      draggableId={`imageContainer${photoId}`}\n      index={photoId}\n      isDragDisabled={!isSortModeOn}\n    >\n      {provided => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          className={`image-container ${image.class}`}\n          onClick={() => handlePhotoOnClick(image.id)}\n          id={`imageContainer${photoId}`}\n        >\n          <img\n            className='photo'\n            src={image.url}\n            alt={photoId}\n          />\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default ImageComponent;\n","import React from 'react';\nimport ImageComponent from './ImageComponent';\nimport {Droppable} from 'react-beautiful-dnd';\n\nconst Dashboard = ({photos, handlePhotoOnClick, isSortModeOn}) => {\n  let noImagesDiv = <div className=\"no-photos\"> Step up your photography game. Upload your first photo :) </div>;\n  return (\n    <Droppable droppableId='dashboard'>\n      { provided => (\n        <div\n          className=\"dashboard-wrapper\"\n          id=\"dashboard\"\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          {isSortModeOn && <h2 className=\"reordering-msg\">Drag any of your images below to reorder your gallery</h2>}\n          {photos.length ?\n              photos.map((image, idx) => <ImageComponent\n                  key={idx}\n                  image={image}\n                  handlePhotoOnClick={handlePhotoOnClick}\n                  className={`image-container ${image.class}`}\n                  photoId={idx}\n                  isSortModeOn={isSortModeOn}\n\n                />):\n              noImagesDiv}\n              {provided.placeholder}\n            </div>\n        )}\n    </Droppable>\n  )\n}\n\nexport default Dashboard;\n","const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const safeArea = Math.max(image.width, image.height) * 2\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React, {useState, useCallback} from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImage from '../helpers/cropImage';\n\nconst PopUp = ({photoId, photos, setPhotos, togglePopUp}) => {\n  let image = photos.filter( photo => photo.id === photoId );\n  const [crop, setCrop] = useState({ x: 0, y: 0});\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n\n  const onCropChange = crop => {\n    setCrop({crop});\n  };\n\n  const updateCroppedImg = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImage(\n        image[0].url,\n        croppedAreaPixels\n      )\n\n      let croppedPhotosArr = photos.map(img => {\n        if (img.id === photoId) {\n          img.url = croppedImage;\n          img.class = '';\n        }\n        return img;\n      });\n      setPhotos(croppedPhotosArr);\n\n\n    } catch (e) {\n      console.error(e)\n    }\n  }, [croppedAreaPixels]);\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels)\n  };\n\n\n  const handleRemove = () => {\n    let newPhotos = photos.filter( photo => photo.id !== photoId );\n    setPhotos(newPhotos);\n    togglePopUp('');\n  }\n\n\n  return (\n    <div>\n      <div className=\"popup-overlay\" onClick={()=> togglePopUp('')}>\n      </div>\n      <div className=\"full-image-component\">\n        <div className=\"close-btn\" onClick={()=> togglePopUp('')}>x</div>\n        <div className=\"image-fullsize-container\">\n          <Cropper\n          image={image[0].url}\n          crop={crop}\n          zoom={zoom}\n          aspect={1/1}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n        <div className=\"image-actions\">\n          <p className=\"note\">Drag the cropping grid to a portion of the photo you would like to crop. Using a trackpad allows you to zoom\n            into your photo</p>\n          <button className=\"btn primary-btn crop-btn\" onClick={updateCroppedImg}>Crop</button>\n          <button className=\"danger-btn remove btn\" onClick={handleRemove}>Remove</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PopUp;\n","import React, {useState, useEffect} from 'react';\nimport SideBar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport PopUp from './components/PopUp';\n\nimport {DragDropContext} from 'react-beautiful-dnd';\n\nconst PhotoManager = () => {\n\n  let myLocalStorageItems = JSON.parse(localStorage.getItem(\"myPhotosLocalStorage\"));\n\n  const [photos, setPhotos] = useState(myLocalStorageItems || []);\n  const [popUp, setPopUp] = useState({\n    show: false,\n    photoId: ''\n  });\n\n  const [isSortModeOn, setSortMode] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('myPhotosLocalStorage', JSON.stringify(photos));\n  }, [photos]);\n\n\n  const handlePhotoOnClick = (id) => {\n    setPopUp( {\n      show: !popUp.show,\n      photoId: id\n    });\n  }\n\n\n  const handleImageUpload = (e) => {\n\n    var theImage = e.target.files[0];\n\n    /* if not an image, dont do anything */\n    if (!theImage.type.match(\"image.*\")) {\n        return;\n    }\n    var reader = new FileReader();\n    reader.onload = function (evt) {\n        let img = new Image();\n        console.log('evt', evt);\n        img.src = evt.target.result;\n        let imgSrc = img.src;\n        img.onload = () => {\n          let imgWidth = img.naturalWidth;\n          let imgHeight = img.naturalHeight;\n          let imageClass = '';\n\n          if(imgWidth > 800 && imgHeight > 700) {\n            imageClass = 'big';\n          } else if(imgWidth > imgHeight && (imgWidth / imgHeight) > 1.5) {\n            imageClass = 'horizontal'\n          } else if(imgHeight > imgWidth && (imgHeight / imgWidth) > 1.5) {\n            imageClass = 'vertical';\n          }\n          let finalImgObj = {\n            url : imgSrc,\n            class : imageClass,\n            id : photos.length\n          };\n          const photosPile = [...photos, finalImgObj];\n          setPhotos(photosPile);\n        }\n\n    }\n\n    reader.readAsDataURL(theImage);\n  }\n\n  const handleMosaicView = () => {\n    let dashboard = document.querySelector('.dashboard-wrapper');\n    let mosaicBtn = document.querySelector('#mosaic-btn');\n    let mosaicBtnOptOne = 'MOSAIC VIEW';\n    let mosaicBtnOptTwo = 'GRID VIEW';\n    let btnText = dashboard.classList.contains('mosaic-view') ? mosaicBtnOptOne : mosaicBtnOptTwo;\n    dashboard.classList.toggle('mosaic-view');\n    mosaicBtn.textContent = btnText;\n  }\n\n  const handleSortPhotosClick = () => {\n    let dashboard = document.querySelector('.dashboard-wrapper');\n    let sortBtn = document.querySelector('#sort-btn');\n    let btnOptOne = 'SORT IMAGES';\n    let btnOptTwo = 'DONE SORTING';\n    let btnText = dashboard.classList.contains('sort-activated') ? btnOptOne : btnOptTwo;\n    dashboard.classList.toggle('sort-activated');\n    sortBtn.textContent = btnText;\n    setSortMode(!isSortModeOn);\n  }\n\n  const onDragEnd = result => {\n    const {destination, source} = result;\n\n    console.log('RESULT', result);\n    if(!destination) return;\n    if(\n      destination.droppedId === source.droppableId &&\n      destination.index === source.index\n    ) return;\n    const reorderedPhotos = [...photos];\n    let movingEl = reorderedPhotos[source.index];\n    reorderedPhotos.splice(source.index, 1);\n    reorderedPhotos.splice(destination.index, 0,movingEl);\n    setPhotos(reorderedPhotos);\n  }\n\n  return (\n    <div className=\"photo-manager-wrapper\">\n      <div className=\"photo-manager-dashboard\">\n        <SideBar\n          setPhotos={setPhotos}\n          handleImageUpload={handleImageUpload}\n          handleMosaicView={handleMosaicView}\n          handleSortPhotosClick={handleSortPhotosClick}\n          isSortModeOn={isSortModeOn}\n          photos={photos}\n        />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Dashboard\n            handlePhotoOnClick={handlePhotoOnClick}\n            photos={photos}\n            isSortModeOn={isSortModeOn}\n        />\n        </DragDropContext>\n        { popUp.show ? <PopUp\n            photos={photos}\n            photoId={popUp.photoId}\n            togglePopUp={handlePhotoOnClick}\n            setPhotos={setPhotos}\n          /> :\n          null }\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoManager;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport PhotoManager from './PhotoManager';\n\nReactDOM.render(<PhotoManager />, document.getElementById('root'));\n"],"sourceRoot":""}